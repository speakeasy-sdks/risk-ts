/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class ReadAllWorkflowsRequest extends SpeakeasyBase {
    /**
     * The unique ID of a parent application where, if provided, the response will only contain workflows from the identified application
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=application-id" })
    applicationId?: string;

    /**
     * Whether [Jira workflows](https://help.logicgate.com/hc/en-us) are to be included in the response in addition to regular workflows (defaults to true)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include-jira-workflows" })
    includeJiraWorkflows?: boolean;

    /**
     * The zero-indexed page number (must not be less than 0, defaults to 0)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page" })
    page?: number;

    /**
     * The size of the page and maximum number of items to be returned (must not be less than 1, defaults to 20)
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=size" })
    size?: number;
}

export class ReadAllWorkflowsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    pageModelOutWorkflowApiOut?: shared.PageModelOutWorkflowApiOut;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
